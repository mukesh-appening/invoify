{
  "narrative": {
    "steps": [
      {
        "title": "Launch site",
        "stepStatus": "pass",
        "details": [
          "All 18 scenarios begin by opening https://invoify.vercel.app successfully."
        ]
      },
      {
        "title": "Landing-page / wizard entry",
        "stepStatus": "fail",
        "details": [
          "Most flows immediately try to verify the presence of first-step headings such as “Bill From :”, “Bill To :”, “Line Items”, etc.",
          "Playwright cannot find those elements within 5 s → hard failure that blocks every downstream action (data entry, validation, navigation, etc.)."
        ]
      },
      {
        "title": "Form filling & live preview",
        "stepStatus": "fail",
        "details": [
          "In the one long scenario that does reach the form (Live Preview – Real-time Updates) the user can type, but later edits are NOT reflected in live preview → expectation mismatch causes failure.",
          "Multiple UI review flags show mis-aligned labels and uneven spacing while typing."
        ]
      },
      {
        "title": "Template & logo handling",
        "stepStatus": "fail",
        "details": [
          "Template picker, logo upload and template switching steps fail because relevant controls are not found or are visually inconsistent (button style/size mismatch flagged by UI bot)."
        ]
      },
      {
        "title": "Signature features (draw / type / upload)",
        "stepStatus": "fail",
        "details": [
          "Canvas for drawing, typed-signature area and upload drop-zone are all “not visible” to the test user, so none of the signature journeys progress."
        ]
      },
      {
        "title": "Financial calculations (line items, tax, discounts, shipping)",
        "stepStatus": "fail",
        "details": [
          "Sections for calculations (‘Line Items’, ‘Tax Calculation’, etc.) never render (element-not-found).",
          "Where calculation fields do appear (subtotal/total) the default values are wrong (example: “Invoice date: Invalid Date”)."
        ]
      },
      {
        "title": "Export & distribution (PDF, Email, CSV/JSON/XML)",
        "stepStatus": "fail",
        "details": [
          "PDF generation flow blocked by missing first-step UI so no file created.",
          "Email flow fails early looking for “Dashboard” header that is not in DOM.",
          "Data export flow stalls on invalid date in dashboard."
        ]
      },
      {
        "title": "Internationalisation (language, currency, date format)",
        "stepStatus": "fail",
        "details": [
          "Language-switch button “BETA English” not found, so locale tests stop.",
          "Currency selector missing.",
          "Date formatting cannot be verified because language switch never happens."
        ]
      },
      {
        "title": "Theme switching",
        "stepStatus": "partial-fail",
        "details": [
          "Toggle button is found and clicked; however DOM class indicating dark theme never appears → dark mode styling not applied → fail."
        ]
      },
      {
        "title": "Responsive design",
        "stepStatus": "pass",
        "details": [
          "Only scenario to finish 100 %. Layout adapts on desktop → tablet → mobile; however automated UI review still flags spacing and hierarchy issues."
        ]
      }
    ]
  },
  "emotional_arc": "User starts optimistic (site loads quickly). Confidence plummets almost immediately when core wizard headings/fields are missing. Repeated ‘element not found’ moments create frustration and doubt about product completeness. Small spike of relief when responsive layout seems to work, but overall sentiment ends pessimistic and distrustful: “Nothing really works yet.”",
  "qualitative_opportunities": [
    {
      "area": "Missing / renamed DOM elements (e.g., “Bill From :”, “Bill To :”)",
      "why_it_matters": "Primary blocker—users cannot start an invoice; all subsequent tasks depend on these sections.",
      "next_actions": [
        "Audit current markup vs. expected copy (remove trailing spaces / colons; use stable IDs, data-testids).",
        "Add smoke test that simply asserts wizard headings render before deploy.",
        "Provide skeleton loader so users see that the wizard is still loading."
      ]
    },
    {
      "area": "Inconsistent spacing, alignment & button styling",
      "why_it_matters": "Visual noise erodes trust and makes forms harder to scan—called out by UI bot in nearly every screenshot.",
      "next_actions": [
        "Adopt a spacing scale and apply via utility classes or design-tokens.",
        "Run a quick CSS pass on label-input grids; ensure flex/grid alignment.",
        "Standardise button component variants (size, radius, font-weight)."
      ]
    },
    {
      "area": "Live preview not syncing after edits",
      "why_it_matters": "Real-time feedback is a headline feature; if edits don’t mirror, users think app is broken.",
      "next_actions": [
        "Debounce form change events and ensure preview re-renders on every field change.",
        "Write unit tests around preview store/state."
      ]
    },
    {
      "area": "Feature discoverability (template picker, logo, signature areas)",
      "why_it_matters": "Tests—and by extension real users—cannot find these controls; hidden features = unused features.",
      "next_actions": [
        "Add clear section headings and tooltip/empty-state prompts (“Add your logo”).",
        "Ensure interactive regions are above the fold or reachable via obvious nav.",
        "Consider progressive disclosure accordion instead of buried side panels."
      ]
    },
    {
      "area": "Theme switch feedback",
      "why_it_matters": "Clicking toggle with no visible change feels broken.",
      "next_actions": [
        "Add body ‘data-theme’ attribute toggle and CSS variables; animate background change for clarity.",
        "Instantly update icon state to reflect new theme."
      ]
    },
    {
      "area": "Internationalisation & currency support",
      "why_it_matters": "Global audiences need language + currency; missing controls block adoption.",
      "next_actions": [
        "Surface language & currency menus in header; preload available locales.",
        "Verify i18n keys exist for all UI copy and fallbacks."
      ]
    },
    {
      "area": "Date / number formatting errors",
      "why_it_matters": "“Invalid Date” undermines credibility and blocks exports.",
      "next_actions": [
        "Ensure date inputs parse & store ISO strings; use locale-aware formatter on render.",
        "Add form validation that prevents export when date missing."
      ]
    },
    {
      "area": "Export & distribution robustness",
      "why_it_matters": "Invoices ultimately need to leave the app—PDF/email/export are critical end-goals.",
      "next_actions": [
        "Gate exports behind successful validation (all fields complete).",
        "Provide spinner & success toast so tests (and users) can assert completion.",
        "Include integration test that downloads a real PDF and checks byte size > 0."
      ]
    }
  ],
  "first_tackles": [
    {
      "rank": 1,
      "description": "Restore / stabilise wizard section headings and DOM hooks so “Bill From”, “Bill To”, etc. reliably render."
    },
    {
      "rank": 2,
      "description": "Fix live preview reactivity (listen to form state changes and re-render)."
    },
    {
      "rank": 3,
      "description": "Implement consistent spacing & label alignment via a shared CSS utility set—quick visual uplift across the app."
    },
    {
      "rank": 4,
      "description": "Add immediate visual feedback to theme toggle (body class switch + icon change)."
    },
    {
      "rank": 5,
      "description": "Expose language & currency selectors in header with placeholder copy until full locale files ready."
    }
  ]
}